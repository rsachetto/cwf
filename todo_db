PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS "django_migrations" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" datetime NOT NULL);
INSERT INTO django_migrations VALUES(1,'contenttypes','0001_initial','2017-09-27 04:29:11.590000');
INSERT INTO django_migrations VALUES(2,'auth','0001_initial','2017-09-27 04:29:11.840000');
INSERT INTO django_migrations VALUES(3,'admin','0001_initial','2017-09-27 04:29:12.142000');
INSERT INTO django_migrations VALUES(4,'admin','0002_logentry_remove_auto_add','2017-09-27 04:29:12.442000');
INSERT INTO django_migrations VALUES(5,'contenttypes','0002_remove_content_type_name','2017-09-27 04:29:12.859000');
INSERT INTO django_migrations VALUES(6,'auth','0002_alter_permission_name_max_length','2017-09-27 04:29:13.165000');
INSERT INTO django_migrations VALUES(7,'auth','0003_alter_user_email_max_length','2017-09-27 04:29:13.504000');
INSERT INTO django_migrations VALUES(8,'auth','0004_alter_user_username_opts','2017-09-27 04:29:13.820000');
INSERT INTO django_migrations VALUES(9,'auth','0005_alter_user_last_login_null','2017-09-27 04:29:14.067000');
INSERT INTO django_migrations VALUES(10,'auth','0006_require_contenttypes_0002','2017-09-27 04:29:14.157000');
INSERT INTO django_migrations VALUES(11,'auth','0007_alter_validators_add_error_messages','2017-09-27 04:29:14.383000');
INSERT INTO django_migrations VALUES(12,'auth','0008_alter_user_username_max_length','2017-09-27 04:29:14.735000');
INSERT INTO django_migrations VALUES(13,'sessions','0001_initial','2017-09-27 04:29:14.941000');
INSERT INTO django_migrations VALUES(14,'todolist','0001_initial','2017-09-27 04:29:15.263000');
INSERT INTO django_migrations VALUES(15,'todolist','0002_auto_20170928_1126','2017-09-28 10:26:29.111000');
CREATE TABLE IF NOT EXISTS "auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(80) NOT NULL UNIQUE);
CREATE TABLE IF NOT EXISTS "auth_group_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "group_id" integer NOT NULL REFERENCES "auth_group" ("id"), "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id"));
CREATE TABLE IF NOT EXISTS "auth_user_groups" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id"), "group_id" integer NOT NULL REFERENCES "auth_group" ("id"));
CREATE TABLE IF NOT EXISTS "auth_user_user_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id"), "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id"));
CREATE TABLE IF NOT EXISTS "django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL, "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id"), "user_id" integer NOT NULL REFERENCES "auth_user" ("id"), "action_time" datetime NOT NULL);
INSERT INTO django_admin_log VALUES(1,'1','General',1,'[{"added": {}}]',7,1,'2017-09-28 10:55:47.991000');
INSERT INTO django_admin_log VALUES(2,'2','Work',1,'[{"added": {}}]',7,1,'2017-09-28 10:56:05.219000');
INSERT INTO django_admin_log VALUES(3,'3','Personal',1,'[{"added": {}}]',7,1,'2017-09-28 10:56:15.414000');
INSERT INTO django_admin_log VALUES(4,'4','School',1,'[{"added": {}}]',7,1,'2017-09-28 10:56:28.822000');
INSERT INTO django_admin_log VALUES(5,'5','Cleaning',1,'[{"added": {}}]',7,1,'2017-09-28 10:56:39.052000');
INSERT INTO django_admin_log VALUES(6,'6','Other',1,'[{"added": {}}]',7,1,'2017-09-28 10:56:45.317000');
CREATE TABLE IF NOT EXISTS "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL);
INSERT INTO django_content_type VALUES(1,'admin','logentry');
INSERT INTO django_content_type VALUES(2,'auth','group');
INSERT INTO django_content_type VALUES(3,'auth','permission');
INSERT INTO django_content_type VALUES(4,'auth','user');
INSERT INTO django_content_type VALUES(5,'contenttypes','contenttype');
INSERT INTO django_content_type VALUES(6,'sessions','session');
INSERT INTO django_content_type VALUES(7,'todolist','category');
INSERT INTO django_content_type VALUES(8,'todolist','todolist');
CREATE TABLE IF NOT EXISTS "auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id"), "codename" varchar(100) NOT NULL, "name" varchar(255) NOT NULL);
INSERT INTO auth_permission VALUES(1,1,'add_logentry','Can add log entry');
INSERT INTO auth_permission VALUES(2,1,'change_logentry','Can change log entry');
INSERT INTO auth_permission VALUES(3,1,'delete_logentry','Can delete log entry');
INSERT INTO auth_permission VALUES(4,2,'add_group','Can add group');
INSERT INTO auth_permission VALUES(5,2,'change_group','Can change group');
INSERT INTO auth_permission VALUES(6,2,'delete_group','Can delete group');
INSERT INTO auth_permission VALUES(7,3,'add_permission','Can add permission');
INSERT INTO auth_permission VALUES(8,3,'change_permission','Can change permission');
INSERT INTO auth_permission VALUES(9,3,'delete_permission','Can delete permission');
INSERT INTO auth_permission VALUES(10,4,'add_user','Can add user');
INSERT INTO auth_permission VALUES(11,4,'change_user','Can change user');
INSERT INTO auth_permission VALUES(12,4,'delete_user','Can delete user');
INSERT INTO auth_permission VALUES(13,5,'add_contenttype','Can add content type');
INSERT INTO auth_permission VALUES(14,5,'change_contenttype','Can change content type');
INSERT INTO auth_permission VALUES(15,5,'delete_contenttype','Can delete content type');
INSERT INTO auth_permission VALUES(16,6,'add_session','Can add session');
INSERT INTO auth_permission VALUES(17,6,'change_session','Can change session');
INSERT INTO auth_permission VALUES(18,6,'delete_session','Can delete session');
INSERT INTO auth_permission VALUES(19,7,'add_category','Can add category');
INSERT INTO auth_permission VALUES(20,7,'change_category','Can change category');
INSERT INTO auth_permission VALUES(21,7,'delete_category','Can delete category');
INSERT INTO auth_permission VALUES(22,8,'add_todolist','Can add todo list');
INSERT INTO auth_permission VALUES(23,8,'change_todolist','Can change todo list');
INSERT INTO auth_permission VALUES(24,8,'delete_todolist','Can delete todo list');
CREATE TABLE IF NOT EXISTS "auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "username" varchar(150) NOT NULL UNIQUE);
INSERT INTO auth_user VALUES(1,'pbkdf2_sha256$36000$9OZAzOaVAMPz$dOI3CzBFYrugrGaqXA/m1l956sFWTBJKHaSFr033Xfc=','2017-09-28 10:47:16.375000',1,'','','admin@todoapp.com',1,1,'2017-09-27 04:36:06.831000','todoapp');
CREATE TABLE IF NOT EXISTS "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" datetime NOT NULL);
INSERT INTO django_session VALUES('kbrxjohbx38712jic4s5075auprux58b','YzFjNThiZDc0ODU4M2U0Y2JhZDUzZjY0ZGNjZjljYWJiMGRmYTgwZDp7Il9hdXRoX3VzZXJfaGFzaCI6IjQzYjNjYTc1Nzg5MzJiODE2NjllNjYxMzU4MWM2OWJlNzA5N2U1ODIiLCJfYXV0aF91c2VyX2JhY2tlbmQiOiJkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZCIsIl9hdXRoX3VzZXJfaWQiOiIxIn0=','2017-10-12 10:47:16.516000');
CREATE TABLE IF NOT EXISTS "todolist_category" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL);
INSERT INTO todolist_category VALUES(1,'General');
INSERT INTO todolist_category VALUES(2,'Work');
INSERT INTO todolist_category VALUES(3,'Personal');
INSERT INTO todolist_category VALUES(4,'School');
INSERT INTO todolist_category VALUES(5,'Cleaning');
INSERT INTO todolist_category VALUES(6,'Other');
CREATE TABLE IF NOT EXISTS "todolist_todolist" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(250) NOT NULL, "content" text NOT NULL, "created" date NOT NULL, "category_id" integer NOT NULL REFERENCES "todolist_category" ("id"), "due_date" date NOT NULL);
INSERT INTO todolist_todolist VALUES(2,'Building a Todo App With Django','Building a Todo App With Django -- 2017-09-30 Work','2017-09-28',2,'2017-09-30');
DELETE FROM sqlite_sequence;
INSERT INTO sqlite_sequence VALUES('django_migrations',15);
INSERT INTO sqlite_sequence VALUES('django_admin_log',6);
INSERT INTO sqlite_sequence VALUES('django_content_type',8);
INSERT INTO sqlite_sequence VALUES('auth_permission',24);
INSERT INTO sqlite_sequence VALUES('auth_user',1);
INSERT INTO sqlite_sequence VALUES('todolist_todolist',2);
INSERT INTO sqlite_sequence VALUES('todolist_category',6);
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_user_groups_user_id_group_id_94350c0c_uniq" ON "auth_user_groups" ("user_id", "group_id");
CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id");
CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id");
CREATE UNIQUE INDEX "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" ON "auth_user_user_permissions" ("user_id", "permission_id");
CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id");
CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id");
CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX "todolist_todolist_category_id_da94bc90" ON "todolist_todolist" ("category_id");
COMMIT;
